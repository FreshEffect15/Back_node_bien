// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int                @id @default(autoincrement())
  nombre       String?
  email        String?            @unique
  contrasenia  String
  rol          Rol
  direcciones  UsuarioDireccion[]
  ordenes      OrdenDeCompra[]

  @@map("usuarios")
}


model UsuarioDireccion {
  id          Int       @id @default(autoincrement())
  usuarioId   Int
  direccionId Int

  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
  direccion   Direccion @relation(fields: [direccionId], references: [id])

  @@map("usuario_direcciones")
}

model Direccion {
  id            Int                @id @default(autoincrement())
  calle         String
  numero        String
  ciudad        String
  provincia     String
  pais          String
  codigoPostal  String
  usuario       UsuarioDireccion[]

  @@map("direcciones")
}

model Categoria {
  id          Int      @id @default(autoincrement())
  nombre      String?
  descripcion String
  idTipo      Int

  tipo        Tipo     @relation(fields: [idTipo], references: [id])
  productos   Producto[]

  @@map("categorias")
}

model Producto {
  id          Int              @id @default(autoincrement())
  nombre      String
  cantidad    Int
  precio      Float
  descripcion String
  color       String
  marca       String
  categoriaId Int

  categoria   Categoria        @relation(fields: [categoriaId], references: [id])
  talles      TalleProducto[]
  detalles    DetalleOrden[]

  @@map("productos")
}

model Talle {
  id      Int       @id @default(autoincrement())
  idTipo  Int

  tipo    Tipo      @relation(fields: [idTipo], references: [id])
  productos TalleProducto[]

  @@map("talles")
}

model TalleProducto {
  id          Int       @id @default(autoincrement())
  productoId  Int
  talleId     Int
  stock       Int

  producto    Producto  @relation(fields: [productoId], references: [id])
  talle       Talle     @relation(fields: [talleId], references: [id])

  @@map("talles_de_productos")
}

model Tipo {
  id     Int      @id @default(autoincrement())
  nombre String

  categorias Categoria[]
  talles     Talle[]

  @@map("tipos")
}

model OrdenDeCompra {
  id             Int             @id @default(autoincrement())
  usuarioId      Int
  fecha          DateTime

  usuario        Usuario         @relation(fields: [usuarioId], references: [id])
  detalle        DetalleOrden[]

  @@map("ordenes_de_compra")
}

model DetalleOrden {
  id              Int        @id @default(autoincrement())
  ordenDeCompraId Int
  productoId      Int
  cantidad        Int

  ordenDeCompra   OrdenDeCompra @relation(fields: [ordenDeCompraId], references: [id])
  producto        Producto       @relation(fields: [productoId], references: [id])

  @@map("detalles_de_ordenes")
}

enum Rol {
  ADMIN
  CLIENT
}